using System;

namespace OpenGL
{
	
	public enum GL
	{
		#region BUFFER_BINDING_TARGET
		ARRAY_BUFFER =               0x8892,
        ATOMIC_COUNTER_BUFFER =      0x92C0,
        COPY_READ_BUFFER =           0x8F36,
        COPY_WRITE_BUFFER =          0x8F37,
        DISPATCH_INDIRECT_BUFFER =   0x90EE,
        DRAW_INDIRECT_BUFFER =       0x8F3F,
        ELEMENT_ARRAY_BUFFER =       0x8893,
        PIXEL_PACK_BUFFER =          0x88EB,
        PIXEL_UNPACK_BUFFER =        0x88EC,
        QUERY_BUFFER =               0x9192,
        SHADER_STORAGE_BUFFER =      0x90D2,
        TEXTURE_BUFFER =             0x8C2A,
        TRANSFORM_FEEDBACK_BUFFER =  0x8C8E,
        UNIFORM_BUFFER =             0x8A11,
		#endregion
		
		#region USAGE
		STREAM_DRAW  = 0x88E0,
        STREAM_READ  = 0x88E1,
        STREAM_COPY  = 0x88E2,
        STATIC_DRAW  = 0x88E4,
        STATIC_READ  = 0x88E5,
        STATIC_COPY  = 0x88E6,
        DYNAMIC_DRAW = 0x88E8,
        DYNAMIC_READ = 0x88E9,
        DYNAMIC_COPY = 0x88EA,
		#endregion
		
		#region BUFFER_MASK
		COLOR_BUFFER_BIT = 0X4000,
        DEPTH_BUFFER_BIT = 0X0100,
        STENCIL_BUFFER_BIT = 0X0400,
		#endregion
		
		#region SHADER_TYPE
		COMPUTE_SHADER = 0x91B9,
        VERTEX_SHADER = 0x8B31,
        TESS_CONTROL_SHADER = 0x8E88,
        TESS_EVALUATION_SHADER = 0x8E87,
        GEOMETRY_SHADER = 0x8DD9,
        FRAGMENT_SHADER = 0x8B30,
		#endregion
		
		#region MODE
		POINTS = 0x0000,
		LINE_STRIP = 0x0003,
		LINE_LOOP = 0x0002,
		LINES = 0x0001,
		LINE_STRIP_ADJACENCY = 0x000B,
		LINES_ADJACENCY = 0x000A,
		TRIANGLE_STRIP = 0x0005,
		TRIANGLE_FAN = 0x0006,
		TRIANGLES = 0x0004,
		TRIANGLE_STRIP_ADJACENCY = 0x000D,
		TRIANGLES_ADJACENCY = 0x000C,
		#endregion
		
		#region TEXTURE_TARGET
		TEXTURE_2D = 0x0DE1,
		PROXY_TEXTURE_2D = 0x8064,
		TEXTURE_1D_ARRAY = 0x8C18,
		PROXY_TEXTURE_1D_ARRAY = 0x8C19,
		TEXTURE_RECTANGLE = 0x84F5,
		PROXY_TEXTURE_RECTANGLE = 0x84F7,
		TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
		TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
		TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
		TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
		TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
		TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
		PROXY_TEXTURE_CUBE_MAP = 0x851B,
		#endregion
		
		#region PIXEL_FORMAT
		RED = 0x1903,
		RG = 0x8227,
		RGB = 0x1907,
		BGR = 0x80E0,
		RGBA = 0x1908,
		BGRA = 0x80E1,
		RED_INTEGER = 0x8D94,
		RG_INTEGER = 0x8228,
		RGB_INTEGER = 0x8D98,
		BGR_INTEGER = 0x8D9A,
		RGBA_INTEGER = 0x8D99,
		BGRA_INTEGER = 0x8D9B,
		STENCIL_INDEX = 0x1901,
		DEPTH_COMPONENT = 0x1902,
		DEPTH_STENCIL = 0x84F9,
		#endregion
	}
    public enum BUFFER_BINDING_TARGET
    {
        ARRAY_BUFFER =               0x8892,
        ATOMIC_COUNTER_BUFFER =      0x92C0,
        COPY_READ_BUFFER =           0x8F36,
        COPY_WRITE_BUFFER =          0x8F37,
        DISPATCH_INDIRECT_BUFFER =   0x90EE,
        DRAW_INDIRECT_BUFFER =       0x8F3F,
        ELEMENT_ARRAY_BUFFER =       0x8893,
        PIXEL_PACK_BUFFER =          0x88EB,
        PIXEL_UNPACK_BUFFER =        0x88EC,
        QUERY_BUFFER =               0x9192,
        SHADER_STORAGE_BUFFER =      0x90D2,
        TEXTURE_BUFFER =             0x8C2A,
        TRANSFORM_FEEDBACK_BUFFER =  0x8C8E,
        UNIFORM_BUFFER =             0x8A11
    }

    public enum USAGE
    {
        STREAM_DRAW  = 0x88E0,
        STREAM_READ  = 0x88E1,
        STREAM_COPY  = 0x88E2,
        STATIC_DRAW  = 0x88E4,
        STATIC_READ  = 0x88E5,
        STATIC_COPY  = 0x88E6,
        DYNAMIC_DRAW = 0x88E8,
        DYNAMIC_READ = 0x88E9,
        DYNAMIC_COPY = 0x88EA
    }

    [Flags]
    public enum BUFFER_MASK
    {
        COLOR_BUFFER_BIT = 0X4000,
        DEPTH_BUFFER_BIT = 0X0100,
        STENCIL_BUFFER_BIT = 0X0400
    }

    public enum SHADER_TYPE
    {
        GL_COMPUTE_SHADER = 0x91B9,
        GL_VERTEX_SHADER = 0x8B31,
        GL_TESS_CONTROL_SHADER = 0x8E88,
        GL_TESS_EVALUATION_SHADER = 0x8E87,
        GL_GEOMETRY_SHADER = 0x8DD9,
        GL_FRAGMENT_SHADER = 0x8B30
    }
	public enum MODE
	{
		GL_POINTS = 0x0000,
		GL_LINE_STRIP = 0x0003,
		GL_LINE_LOOP = 0x0002,
		GL_LINES = 0x0001,
		GL_LINE_STRIP_ADJACENCY = 0x000B,
		GL_LINES_ADJACENCY = 0x000A,
		GL_TRIANGLE_STRIP = 0x0005,
		GL_TRIANGLE_FAN = 0x0006,
		GL_TRIANGLES = 0x0004,
		GL_TRIANGLE_STRIP_ADJACENCY = 0x000D,
		GL_TRIANGLES_ADJACENCY = 0x000C
	}
	
	public enum TEXTURE_TARGET
	{
		GL_TEXTURE_2D = 0x0DE1,
		GL_PROXY_TEXTURE_2D = 0x8064,
		GL_TEXTURE_1D_ARRAY = 0x8C18,
		GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19,
		GL_TEXTURE_RECTANGLE = 0x84F5,
		GL_PROXY_TEXTURE_RECTANGLE = 0x84F7,
		GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
		GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
		GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
		GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
		GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
		GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
		GL_PROXY_TEXTURE_CUBE_MAP = 0x851B
	}
	
	public enum PIXEL_FORMAT
	{
		GL_RED = 0x1903,
		GL_RG = 0x8227,
		GL_RGB = 0x1907,
		GL_BGR = 0x80E0,
		GL_RGBA = 0x1908,
		GL_BGRA = 0x80E1,
		GL_RED_INTEGER = 0x8D94,
		GL_RG_INTEGER = 0x8228,
		GL_RGB_INTEGER = 0x8D98,
		GL_BGR_INTEGER = 0x8D9A,
		GL_RGBA_INTEGER = 0x8D99,
		GL_BGRA_INTEGER = 0x8D9B,
		GL_STENCIL_INDEX = 0x1901,
		GL_DEPTH_COMPONENT = 0x1902,
		GL_DEPTH_STENCIL = 0x84F9
	}
}
